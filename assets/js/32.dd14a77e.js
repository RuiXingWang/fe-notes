(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{180:function(t,s,e){"use strict";e.r(s);var a=e(0),n=Object(a.a)({},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),e("p",[t._v("Vue 组件的 API 来自三部分——prop、事件和插槽：")]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._m(8),t._v(" "),t._m(9),t._m(10),t._v(" "),e("p",[t._v("我们原先的父组件写法：")]),t._v(" "),t._m(11),t._m(12),t._v(" "),t._m(13),t._v(" "),e("p",[t._v("比如当一个组件有诸多配置项，且当没有传入配置项取用组件内部默认项的时候，为了方便覆写子组件的内部配置项，不妨使用一个对象将配置收集到一起，但是这种做法有两个缺点，谨慎使用")]),t._v(" "),t._m(14),t._v(" "),t._m(15),e("p",[t._v("还有一种鱼和熊掌兼得的方法，可以给子组件包一层，叫中间组件。父组件将配置项作为一个对象传入中间组件，在中间组件里面对默认配置项进行初始化和覆写，然后再以v-bind={生成好的配置}的方式传入子组件，在子组件里面进行验证。")]),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._m(19),t._m(20),t._v(" "),e("p",[t._v("我们常看到一些优秀的组件库，传入的值既可以是一个 String/Number，也可以是一个函数。")]),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),e("p",[t._v("处理 rowKey 生成 RowIdentity 的函数源码：")]),t._v(" "),t._m(23),e("p",[t._v("由于业务场景多变，组件的设计者很难考虑完全，不妨设计灵活的 prop，由开发者自行定义")]),t._v(" "),t._m(24),t._v(" "),t._m(25),t._v(" "),t._m(26),t._v(" "),t._m(27),t._v(" "),t._m(28),t._v(" "),t._m(29),t._m(30),t._v(" "),t._m(31),t._v(" "),e("p",[t._v("为啥要自定义组件的 v-model 呢，因为数据不符合要求呗。你的输入值不可能总是 value ，你的事件不可能总是 input，具体详见"),e("a",{attrs:{href:"https://link.juejin.im/?target=https%3A%2F%2Fcn.vuejs.org%2Fv2%2Fguide%2Fcomponents-custom-events.html%23%25E8%2587%25AA%25E5%25AE%259A%25E4%25B9%2589%25E7%25BB%2584%25E4%25BB%25B6%25E7%259A%2584-v-model",target:"_blank",rel:"noopener noreferrer"}},[t._v("文档"),e("OutboundLink")],1)]),t._v(" "),t._m(32),t._v(" "),t._m(33),t._v(" "),e("p",[t._v("以  update:myPropName  的模式触发事件取代双向绑定"),e("code",[t._v("this.$emit('update:title', newTitle)")]),t._v("，具体详见"),e("a",{attrs:{href:"https://link.juejin.im/?target=https%3A%2F%2Fcn.vuejs.org%2Fv2%2Fguide%2Fcomponents-custom-events.html%23sync-%25E4%25BF%25AE%25E9%25A5%25B0%25E7%25AC%25A6",target:"_blank",rel:"noopener noreferrer"}},[t._v("文档"),e("OutboundLink")],1)]),t._v(" "),t._m(34),t._v(" "),t._m(35),t._v(" "),e("p",[t._v("有读者可能会问，为什么不能把子组件里面的事件 emit 出来，通过父组件处理？然后传入一个控制子组件的 prop 属性。")]),t._v(" "),e("p",[t._v("我想说的是，可以，但是这样真的很麻烦，子组件内部的状态却要依赖父组件传值。")]),t._v(" "),e("p",[t._v("该组件内部的状态，我们需要把它暴露出来嘛？我觉得不需要，组件内部的状态就让它处于组件内部")]),t._v(" "),e("p",[t._v("但是可以通过传入 function（你可以理解为一个钩子），参与组件状态变更的行为。比如很好用的拖拽库,"),e("a",{attrs:{href:"https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2FSortableJS%2FVue.Draggable",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vue.Draggable"),e("OutboundLink")],1),t._v("控制元素是否被拖动的行为。")]),t._v(" "),t._m(36),t._v(" "),t._m(37),e("p",[t._v("这样做的好处，就是组件内部自由一套运行逻辑，但是我可以通过传入 function 来干预。我没有直接修改组件内部状态，而是通过函数（你可以称它为钩子）去触发，方便调试组件，使得组件行为具有可预测性")]),t._v(" "),t._m(38),t._v(" "),e("p",[t._v("很少有这样的骚操作，但是由于数据和操作的复杂性，当数据结构复杂，嵌套过深的情况下，父组件很难对于子组件的数据的精细控制")]),t._v(" "),e("p",[t._v("因此，如果不得已而为之，请在文档里，把子组件可以调用的方法暴露出来，供使用者使用。使用这种组件比较麻烦，得去看文档，没有文档的只好去看源码")]),t._v(" "),e("p",[e("code",[t._v("ElementUI")]),t._v("的"),e("a",{attrs:{href:"https://link.juejin.im/?target=https%3A%2F%2Felement.eleme.cn%2F%23%2Fzh-CN%2Fcomponent%2Ftree%23fang-fa",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("tree")]),t._v("组件"),e("OutboundLink")],1),t._v("提供了很多方法，用于父组件去操作子组件。")]),t._v(" "),t._m(39),t._v(" "),t._m(40),t._v(" "),e("blockquote",[e("p",[t._v("HTML "),e("a",{attrs:{href:"https://link.juejin.im/?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FWeb%2FHTML%2FElement%2Fslot",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("<slot>")]),t._v(" element"),e("OutboundLink")],1),t._v(" 是 Web Components 技术的一部分，是自定义 web 组件的占位符，vue 里面的 slot 的灵感来自 Web Components 规范草案，具体见"),e("a",{attrs:{href:"https://link.juejin.im/?target=https%3A%2F%2Fcn.vuejs.org%2Fv2%2Fguide%2Fcomponents-slots.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("文档"),e("OutboundLink")],1)])]),t._v(" "),e("h3",{attrs:{id:"默认插槽"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#默认插槽","aria-hidden":"true"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://link.juejin.im/?target=https%3A%2F%2Fcn.vuejs.org%2Fv2%2Fguide%2Fcomponents-slots.html%23%25E6%258F%2592%25E6%25A7%25BD%25E5%2586%2585%25E5%25AE%25B9",target:"_blank",rel:"noopener noreferrer"}},[t._v("默认插槽"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("能用默认插槽就不要使用具名插槽，我真的不想使用你这个组件的时候还去翻看你的插槽叫什么名字")]),t._v(" "),e("p",[t._v("之前我司一个网页模板 三个插槽，header，body，footer，我用的是真的难受，每次都记不得，看似三个单词都挺熟悉的，但是其实 head,content,foot 这些单词也都行啊，谁知道用啥（可能我老了吧，组件如果不是必要尽量不要让人有记忆成本）。")]),t._v(" "),e("h3",{attrs:{id:"后备内容"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#后备内容","aria-hidden":"true"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://link.juejin.im/?target=https%3A%2F%2Fcn.vuejs.org%2Fv2%2Fguide%2Fcomponents-slots.html%23%25E5%2590%258E%25E5%25A4%2587%25E5%2586%2585%25E5%25AE%25B9",target:"_blank",rel:"noopener noreferrer"}},[t._v("后备内容"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("就是给组件里面的插槽定义默认值，它只会在没有提供内容的时候被渲染。建议用上插槽就给它添加默认内容")]),t._v(" "),t._m(41),t._v(" "),t._m(42),t._v(" "),t._m(43),t._v(" "),t._m(44),t._m(45),t._v(" "),e("blockquote",[e("p",[t._v("这里推荐遵循 "),e("a",{attrs:{href:"https://link.juejin.im/?target=https%3A%2F%2Fcn.vuejs.org%2Fv2%2Fstyle-guide%2F",target:"_blank",rel:"noopener noreferrer"}},[t._v("vue 官方指南"),e("OutboundLink")],1),t._v("，值得一看")])]),t._v(" "),e("p",[t._v("我们构建组件的时候通常会将其入口命名为 index.vue ，引入的时候，直接引入该组件的文件夹即可。")]),t._v(" "),t._m(46),t._v(" "),e("p",[t._v("vscode 显然意识到了这个问题，所以当文件名相同的文件被打开时，它会在文件名旁边显示文件夹名")]),t._v(" "),t._m(47),t._v(" "),t._m(48),t._m(49),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://link.juejin.im/?target=https%3A%2F%2Fcn.vuejs.org%2Fv2%2Fguide%2Fconditional.html%23%25E5%259C%25A8-lt-template-gt-%25E5%2585%2583%25E7%25B4%25A0%25E4%25B8%258A%25E4%25BD%25BF%25E7%2594%25A8-v-if-%25E6%259D%25A1%25E4%25BB%25B6%25E6%25B8%25B2%25E6%259F%2593%25E5%2588%2586%25E7%25BB%2584",target:"_blank",rel:"noopener noreferrer"}},[t._v("template"),e("OutboundLink")],1),t._v(",把一个"),e("code",[t._v("<template>")]),t._v(" 元素当做不可见的包裹元素，并在上面使用 v-if。最终的渲染结果将不包含 "),e("code",[t._v("<template>")]),t._v(" 元素")]),t._v(" "),e("li",[t._v("能用 computed 计算属性的，尽量就不用 watch")]),t._v(" "),t._m(50)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://juejin.im/post/5cdacf96e51d453ae110543b?utm_source=gold_browser_extension",target:"_blank",rel:"noopener noreferrer"}},[t._v("原文"),e("OutboundLink")],1)])])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"如何写好一个vue组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何写好一个vue组件","aria-hidden":"true"}},[this._v("#")]),this._v(" 如何写好一个vue组件")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("一个适用性良好的组件，一种是可配置项很多，另一种就是容易覆写，从而扩展功能")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("prop 允许外部环境传递数据给组件")]),this._v(" "),s("li",[this._v("event 允许从组件内触发外部环境的副作用")]),this._v(" "),s("li",[this._v("slot 允许外部环境将额外的内容组合在组件中")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"prop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#prop","aria-hidden":"true"}},[this._v("#")]),this._v(" prop")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("组件具有自身状态，当没有相关 porps 传入时，使用自身状态完成渲染和交互逻辑；当该组件被调用时，如果有相关 props 传入，那么将会交出控制权，由父组件控制其行为")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"仅一个值传入组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#仅一个值传入组件","aria-hidden":"true"}},[this._v("#")]),this._v(" 仅一个值传入组件")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("如果该组件设计上支持双向绑定，可使用"),s("code",[this._v("v-model")]),this._v("将该参数传入组件，减少记忆成本（毕竟 vue 官方的语法糖，不用白不用）")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[this._v("<")]),this._v("my-component v-model"),s("span",{pre:!0,attrs:{class:"token operator"}},[this._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[this._v('"foo"')]),this._v(" /"),s("span",{pre:!0,attrs:{class:"token operator"}},[this._v(">")]),this._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("如果该组件可以独立运行，不依赖父组件时，还是给这个值起个名字吧")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[this._v("<")]),this._v("component-no-sync :childNeed"),s("span",{pre:!0,attrs:{class:"token operator"}},[this._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[this._v('"foo"')]),this._v(" /"),s("span",{pre:!0,attrs:{class:"token operator"}},[this._v(">")]),this._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"很多值需要传入组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#很多值需要传入组件","aria-hidden":"true"}},[this._v("#")]),this._v(" 很多值需要传入组件")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("child-component :prop1"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"var1"')]),t._v(" :prop2"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"var2"')]),t._v(" :prop"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"var3"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". /"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("其实可以在父组件上直接使用"),s("code",[this._v("v-bind={子组件props集合}")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"传入一个对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#传入一个对象","aria-hidden":"true"}},[this._v("#")]),this._v(" 传入一个对象")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[this._v("不能利用 props 验证对象里面每个的值类型")]),this._v(" "),s("li",[this._v("如果你子组件修改了父组件传入的对象A，父组件的对象A也会发生修改，所以我一般只有子组件不会修改父组件传入的值的情况下，我才会传入对象。父组件把对象传入子组件，是实现双向绑定的hack方式，但不推荐，vue 3.0可能就要对这种方式说拜拜了，为了以后代码好改，还是不要用这种方式实现双向绑定")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("child-component v-model"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text"')]),t._v(" :setting"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"{color:'bule'}\"")]),t._v(" /"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n// 子组件内部读取配置，通过扩展运算符替换掉默认配置\nconst setting "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".defaultSetting,\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".this.setting\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"computed-属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#computed-属性","aria-hidden":"true"}},[this._v("#")]),this._v(" computed 属性")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("vue 的 computed 属性默认是只读的，你可以提供一个 "),s("code",[this._v("setter")]),this._v("。它可以优化我写组件的逻辑，适用于父组件处理的值和子组件处理的值是同一个的情况")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("template"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("el-select v-model"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"email"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("el-option\n      v-for"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"item in adminUserOptions"')]),t._v("\n      :key"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"item.email"')]),t._v("\n      :label"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"item.email"')]),t._v("\n      :value"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"item.email"')]),t._v("\n    /"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("/el-select"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("/template"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("export")]),t._v(" default "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  props: "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    value: "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n  computed: "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    email: "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      get"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" this.value\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n      set"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("val"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        this."),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$emit")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'input'")]),t._v(", val"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        this."),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$emit")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'change'")]),t._v(", val"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"灵活的-prop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#灵活的-prop","aria-hidden":"true"}},[this._v("#")]),this._v(" 灵活的 prop")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("比如"),s("code",[this._v("ElementUI")]),this._v("的"),s("code",[this._v("Table")]),this._v("组件，当你想要显示树形数据的时候，必须传入"),s("code",[this._v("row-key")]),this._v("。看它的介绍就知道是有多灵活：")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[e("code",[t._v("row-key")]),t._v("的作用：行数据的 "),e("code",[t._v("Key")]),t._v("，用来优化 "),e("code",[t._v("Table")]),t._v(" 的渲染；在使用 "),e("code",[t._v("reserve-selection")]),t._v(" 功能与显示树形数据时，该属性是必填的。类型为 String 时，支持多层访问："),e("code",[t._v("user.info.id")]),t._v("，但不支持 user.info[0].id，此种情况请使用 "),e("code",[t._v("Function")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("//https://github.com/ElemeFE/element/blob/dev/packages/table/src/util.js\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("export")]),t._v(" const getRowIdentity "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("row, rowKey"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("row"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" throw new Error"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'row is required when get row identity'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  // 行数据的key\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("typeof rowKey "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'string'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rowKey.indexOf"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" 0"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" row"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("rowKey"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    // 支持多层访问：user.info.id\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" key "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" rowKey.split"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" current "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" row\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("let i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 0"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" key.length"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i++"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      current "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" current"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" current\n    // 通过函数自定义\n    // 我处理过父和子id可能相同的情况，只好通过Function自定义\n    // 不可以通过时间或者随机字符串生成ID\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("typeof rowKey "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" rowKey.call"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("null, row"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件","aria-hidden":"true"}},[this._v("#")]),this._v(" 事件")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"emit-on"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#emit-on","aria-hidden":"true"}},[this._v("#")]),this._v(" emit/on")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("读者肯定知道 emit/on 如何使用，我就简单说一下 vue 的 "),s("code",[this._v("v-model")]),this._v("和"),s("code",[this._v("sync")]),this._v("的语法糖，我们可以利用这些语法糖，帮助我们写出简洁的代码（父组件可以少写监听子组件的事件，比如你不用写@input）")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"v-model"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-model","aria-hidden":"true"}},[this._v("#")]),this._v(" v-model")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("看一下下面的代码示例，就能懂这句话了。v-model 会忽略所有表单元素的 value、checked、selected 特性的初始值而总是将 Vue 实例的数据作为数据来源。你应该通过 JavaScript 在组件的 data 选项中声明初始值")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("input v-model"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"searchText"')]),t._v(" /"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("input\n  v-bind:value"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"searchText"')]),t._v("\n  v-on:input"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"searchText = '),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$event")]),t._v('.target.value"')]),t._v("\n/"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n// 当把v-model用在组件上\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("custom-input\n  v-bind:value"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"searchText"')]),t._v("\n  v-on:input"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"searchText = '),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$event")]),t._v('"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("/custom-input"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("为了让它正常工作，这个组件内的 "),s("code",[this._v("<input>")]),this._v(" 必须：将其 value 特性绑定到一个名叫 value 的 prop 上在其 input 事件被触发时，将新的值通过自定义的 input 事件抛出，即"),s("code",[this._v("this.$emit('input',changedValue)")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"自定义-v-model"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义-v-model","aria-hidden":"true"}},[this._v("#")]),this._v(" 自定义 v-model")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"sync（双向绑定语法糖）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sync（双向绑定语法糖）","aria-hidden":"true"}},[this._v("#")]),this._v(" sync（双向绑定语法糖）")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("vue 真的是方便了开发者很多，站在开发者的角度考虑，很大的提升开发效率")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"function-通过-prop-传入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#function-通过-prop-传入","aria-hidden":"true"}},[this._v("#")]),this._v(" Function 通过 prop 传入")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("本来想放在 prop 部分的，但是个人觉得其实它和 emit/on 更有关系一点")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("Vue.Draggable")]),this._v("可以传入一个 move 方法，我们看一下它如何处理的。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("onDragMove"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("evt, originalEvent"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  const onMove "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" this.move"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  // 如果没有传入move，那么返回true，可以移动\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("onMove "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("this.realList"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  const relatedContext "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" this.getRelatedContextFromMoveEvent"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("evt"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  const draggedContext "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" this.context"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  const futureIndex "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" this.computeFutureIndex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("relatedContext, evt"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  Object.assign"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("draggedContext, "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" futureIndex "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  const sendEvt "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object.assign"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(", evt, "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    relatedContext,\n    draggedContext\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  // 组件行为由传入的move函数控制\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" onMove"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sendEvt, originalEvent"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"父组件直接操作子组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#父组件直接操作子组件","aria-hidden":"true"}},[this._v("#")]),this._v(" 父组件直接操作子组件")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("eg:"),s("code",[this._v("this.$refs.tree.setCheckedKeys([]);")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"插槽"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#插槽","aria-hidden":"true"}},[this._v("#")]),this._v(" 插槽")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"封装他人组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#封装他人组件","aria-hidden":"true"}},[this._v("#")]),this._v(" 封装他人组件")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("有些时候我们可能是对他人的组件进行封装，这里强烈推荐使用"),e("code",[t._v('v-bind="$attrs" 和 v-on="$listeners"')]),t._v("。 "),e("code",[t._v("vm.$attrs")]),t._v(" 是一个属性，其包含了父作用域中不作为 prop 被识别 (且获取) 的特性绑定 (class 和 style 除外)。这些未识别的属性可以通过 "),e("code",[t._v('v-bind="$attrs"')]),t._v(" 传入内部组件。未识别的事件可通过"),e("code",[t._v('v-on="$listeners"')]),t._v("传入")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("举个例子，比如我创建了我的按钮组件"),s("code",[this._v("myButton")]),this._v("，封装了 element-ui 的 el-button 组件（其实什么事情都没做），在使用组件 "),s("code",[this._v("<my-button />")]),this._v("时，就可以直接在组件上使用 el-button 的属性,不被 prop 识别的属性会传入到 el-button 元素上去")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("template"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("el-button v-bind"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$attrs")]),t._v('"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("导出"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("/el-button"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("/template"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n// 父组件使用\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("my-button type"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'primary'")]),t._v(" size"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mini'")]),t._v("/"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"组件命名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件命名","aria-hidden":"true"}},[this._v("#")]),this._v(" 组件命名")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("但是这样做会有一个问题，当你编辑多个组件的时候，所有的组件入口都叫做"),s("code",[this._v("index.vue")]),this._v("，容易糊涂")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("如何解决呢，我们可以把 index.js 当作一个单纯的入口，不承担任何逻辑。仅仅负责引入"),s("code",[this._v("component-name-container")]),this._v("以及"),s("code",[this._v("export default component-name-container")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("my-app\n└── src\n    └── components\n        └── component-name\n            ├── component-name.css\n            ├── component-name-container.vue\n            └── index.js\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"tips（个人喜好）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tips（个人喜好）","aria-hidden":"true"}},[this._v("#")]),this._v(" tips（个人喜好）")])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[this._v("模板里面写太多 v-if 会让你的模板很难看，"),s("code",[this._v("v-else-if")]),this._v("尽量还是别用了吧。一长串的 if else，在模板里面看的很乱")])}],!1,null,null,null);s.default=n.exports}}]);